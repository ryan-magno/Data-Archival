{
	"name": "Automated Pipeline",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata",
				"description": "Get the tables, year, month, and day to archive",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Update Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT \n    TableName,\n    ArchivalYear, \n    ArchivalMonth, \n    ArchivalDay\nFROM dbo.MetadataTable \nWHERE IsActive = 1;\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "CapatazMetadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Iterate the Tables",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 6,
					"activities": [
						{
							"name": "Start Monitoring",
							"type": "SqlServerStoredProcedure",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[StartMonitoring]",
								"storedProcedureParameters": {
									"PipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									},
									"Year": {
										"value": {
											"value": "@item().ArchivalYear",
											"type": "Expression"
										},
										"type": "Int16"
									},
									"Month": {
										"value": {
											"value": "@item().ArchivalMonth",
											"type": "Expression"
										},
										"type": "Int16"
									},
									"Day": {
										"value": {
											"value": "@item().ArchivalDay",
											"type": "Expression"
										},
										"type": "Int16"
									}
								}
							}
						},
						{
							"name": "SQL Database to ADLS",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Start Monitoring",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@if(\n    or(\n        equals(item().TableName, 'ProfileTimeKeepingWhosWorkings'),\n        equals(item().TableName, 'ProfileTimeKeepingWhosWorkings.Archived')\n    ),\n    concat(\n        'SELECT * FROM [', item().TableName, '] WITH (NOLOCK) WHERE YEAR([DateTimeInOut]) = ', item().ArchivalYear, \n        ' AND MONTH([DateTimeInOut]) = ', item().ArchivalMonth, \n        ' AND DAY([DateTimeInOut]) = ', item().ArchivalDay\n    ),\n    concat(\n        'SELECT * FROM [', item().TableName, '] WITH (NOLOCK) WHERE YEAR([CreatedDate]) = ', item().ArchivalYear, \n        ' AND MONTH([CreatedDate]) = ', item().ArchivalMonth, \n        ' AND DAY([CreatedDate]) = ', item().ArchivalDay\n    )\n)\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "CapatazDB",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "SinkDatasetParquet",
									"type": "DatasetReference",
									"parameters": {
										"FileName": {
											"value": "@concat(item().ArchivalYear, '-', item().ArchivalMonth, '-', item().ArchivalDay, ' - ', pipeline().RunId, '.parquet')\n",
											"type": "Expression"
										},
										"Directory": {
											"value": "@concat(replace(item().TableName, '.Archive', ''), '/', item().ArchivalYear, '/', item().ArchivalMonth, '/')\n",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Update Monitoring Table",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SQL Database to ADLS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[ManageMonitoring]",
								"storedProcedureParameters": {
									"Remarks": {
										"value": {
											"value": "@activity('SQL Database to ADLS').error",
											"type": "Expression"
										},
										"type": "String"
									},
									"Read": {
										"value": {
											"value": "@activity('SQL Database to ADLS').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int16"
									},
									"Write": {
										"value": {
											"value": "@activity('SQL Database to ADLS').output.rowsRead",
											"type": "Expression"
										},
										"type": "Int16"
									},
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"Year": {
										"value": {
											"value": "@item().ArchivalYear",
											"type": "Expression"
										},
										"type": "Int16"
									},
									"Month": {
										"value": {
											"value": "@item().ArchivalMonth",
											"type": "Expression"
										},
										"type": "Int16"
									},
									"Day": {
										"value": {
											"value": "@item().ArchivalDay",
											"type": "Expression"
										},
										"type": "Int16"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "CapatazDBLinkedService",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Log Errors",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SQL Database to ADLS",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[LogError]",
								"storedProcedureParameters": {
									"Errors": {
										"value": {
											"value": "@concat('Errors: ', string(activity('SQL Database to ADLS').output.errors))\n",
											"type": "Expression"
										},
										"type": "String"
									},
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "CapatazDBLinkedService",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "If Condition for Data Validation",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Update Monitoring Table",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(variables('Read'), variables('Write'))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Fail Activity",
										"type": "Fail",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"message": {
												"value": "Row count mismatch detected. Source row count: @{variables('Read')}, Sink row count: @{variables('Write')}.\n",
												"type": "Expression"
											},
											"errorCode": {
												"value": "RowCountMismatch",
												"type": "Expression"
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Delete Archived Data",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 3,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[DeleteArchivedData]",
											"storedProcedureParameters": {
												"Day": {
													"value": {
														"value": "@item().ArchivalDay",
														"type": "Expression"
													},
													"type": "Int16"
												},
												"Month": {
													"value": {
														"value": "@item().ArchivalMonth",
														"type": "Expression"
													},
													"type": "Int16"
												},
												"PipelineRunID": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"Year": {
													"value": {
														"value": "@item().ArchivalYear",
														"type": "Expression"
													},
													"type": "Int16"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "CapatazDBLinkedService",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Update Metadata",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[UpdateMetadata]",
					"storedProcedureParameters": {
						"RetentionMonth": {
							"value": "3",
							"type": "Int16"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "CapatazDBLinkedService",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Send Email",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Iterate the Tables",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"url": "https://prod-09.southeastasia.logic.azure.com:443/workflows/2165d75dbf544f4bac16eea2a4046fc0/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=ZS_KkiU12DYTIxQ5cYi5QgSt53TuW5l9j0x1stp6Q_Y",
					"body": {
						"value": "{\n    \"PipelineRunID\": \"@{pipeline().RunId}\"\n}\n",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"MetadataTableName": {
				"type": "string",
				"defaultValue": "dbo.MetadataTable"
			}
		},
		"variables": {
			"Read": {
				"type": "String",
				"defaultValue": "0"
			},
			"Write": {
				"type": "String",
				"defaultValue": "0"
			},
			"Deleted": {
				"type": "Integer"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-12-28T05:58:24Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}