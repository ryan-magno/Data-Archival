{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Update Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT TableName, MinCreatedDate FROM dbo.MetadataTable WHERE IsActive = 1",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "orig_metadata_table",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Iterate the Tables",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata').output.value",
						"type": "Expression"
					},
					"batchCount": 6,
					"activities": [
						{
							"name": "SQL Database to ADLS",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Initial Audit",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT * FROM @{item().TableName} WHERE CreatedDate >= '@{item().MinCreatedDate}' AND CreatedDate <= '@{variables('SpecificDate')}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings",
										"copyBehavior": "FlattenHierarchy"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "datalake_ls",
										"type": "LinkedServiceReference"
									},
									"path": "capataz-datalake",
									"enableCompression": true
								},
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "orig_capatazDB",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "SinkDatasetParquet",
									"type": "DatasetReference",
									"parameters": {
										"FileName": {
											"value": "@concat(\nsubstring(item().MinCreatedDate, 0,10), ' - ', substring(variables('SpecificDate'), 0, 10),\n\n'.parquet'\n    \n)",
											"type": "Expression"
										},
										"Directory": {
											"value": "@concat(item().TableName, '/', formatDateTime(item().MinCreatedDate, 'yyyy'), '/')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Initial Audit",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[StartMonitoring]",
								"storedProcedureParameters": {
									"PipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"StartTime": {
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									},
									"Startdate": {
										"value": {
											"value": "@item().MinCreatedDate",
											"type": "Expression"
										}
									},
									"EndDate": {
										"value": {
											"value": "@variables('SpecificDate')",
											"type": "Expression"
										}
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "orig_capataz_ls",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Update Monitoring Table",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SQL Database to ADLS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[UpdateMonitoring]",
								"storedProcedureParameters": {
									"EndTime": {
										"value": null,
										"type": "DateTime"
									},
									"Errors": {
										"value": {
											"value": "@activity('SQL Database to ADLS').error",
											"type": "Expression"
										},
										"type": "String"
									},
									"RowCountSink": {
										"value": {
											"value": "@activity('SQL Database to ADLS').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"RowCountSource": {
										"value": {
											"value": "@activity('SQL Database to ADLS').output.rowsRead",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "orig_capataz_ls",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Log Errors",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SQL Database to ADLS",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[LogError]",
								"storedProcedureParameters": {
									"Errors": {
										"value": {
											"value": "@concat('Errors: ', string(activity('SQL Database to ADLS').output.errors))\n",
											"type": "Expression"
										},
										"type": "String"
									},
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "orig_capataz_ls",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Update Monitoring Table",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(variables('RowCountSource'), variables('RowCountSink'))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Fail1",
										"type": "Fail",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"message": {
												"value": "Row count mismatch detected. Source row count: @{variables('RowCountSource')}, Sink row count: @{variables('RowCountSink')}.",
												"type": "Expression"
											},
											"errorCode": "RowCountMismatch"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Delete Archived Data",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[DeleteArchivedData]",
											"storedProcedureParameters": {
												"StartDate": {
													"value": {
														"value": "@item().MinCreatedDate",
														"type": "Expression"
													},
													"type": "String"
												},
												"EndDate": {
													"value": {
														"value": "@variables('SpecificDate')",
														"type": "Expression"
													},
													"type": "String"
												},
												"TableName": {
													"value": {
														"value": "@item().TableName",
														"type": "Expression"
													},
													"type": "String"
												},
												"PipelineRunID": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "orig_capataz_ls",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Update Metadata",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[UpdateMetadata]"
				},
				"linkedServiceName": {
					"referenceName": "orig_capataz_ls",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"MetadataTableName": {
				"type": "string",
				"defaultValue": "dbo.MetadataTable"
			}
		},
		"variables": {
			"RowCountSource": {
				"type": "Integer",
				"defaultValue": 0
			},
			"RowCountSink": {
				"type": "Integer",
				"defaultValue": 0
			},
			"SpecificDate": {
				"type": "String",
				"defaultValue": "@formatDateTime(getPastTime(3, 'Month'), 'yyyy-MM-ddTHH:mm:ss.fff')"
			},
			"errors": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-12-12T16:37:52Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}